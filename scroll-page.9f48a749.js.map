{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,uCAMA,MAAMC,EAAeC,SAASC,cAAc,mBACtCC,EAAYF,SAASC,cAAc,eACnCE,EAAYH,SAASC,cAAc,oBAEnCG,EAAc,IAAI,EAAAP,EAAAQ,aA+BlBC,EAAW,IAAIC,sBACjB,CAACC,EAASC,KACFD,EAAQ,GAAGE,gBA/BFC,OAAMC,IACvBR,EAAYS,MAAQ,EAEpB,IACI,MAAMC,QAAiBV,EAAYW,qBAEnC,GAAID,EAASE,KAAKC,WAAab,EAAYc,SAASd,EAAYS,KAW5D,OATAX,EAAUiB,mBAAmB,aAAa,EAAAC,EAAAC,SAAmBP,EAASE,KAAKM,OAE3EhB,EAASiB,UAAUvB,SAASC,cAAc,oBAE1CuB,SAEAC,EAAAC,GAASC,OAAOC,KAAK,6DAA8D,CACnFC,QAAS,MAKb3B,EAAUiB,mBAAmB,aAAa,EAAAC,EAAAC,SAAmBP,EAASE,KAAKM,OAE3EE,G,CAEE,MAAMM,GACRC,QAAQC,IAAIF,E,GAOZG,EAAc,GAGlB,CACIC,KAAM,KACNC,WAAY,QACZC,UAAW,IAwDbZ,EAAc,WAKhB,OAJiB,IAAIC,EAAAY,GAAJ,CAAmB,aAAc,CAClDC,aAAc,MACdC,aAAc,K,EAKlBxC,EAAayC,iBAAiB,UA5DH7B,MAAMC,IAC7BA,EAAM6B,iBAENrC,EAAYsC,MAAQvC,EAAUwC,MAC9BvC,EAAYS,KAAO,EAEnB,IACA,MAAMC,QAAiBV,EAAYW,qBAEjC,GAAkC,IAA9BD,EAASE,KAAKM,KAAKsB,OASrB,OAPAnB,EAAAC,GAASC,OAAOC,KAAK,4EAErB1B,EAAU2C,UAAY,GAEtBvC,EAASiB,UAAUvB,SAASC,cAAc,yBAE1CW,EAAMkC,OAAOC,QAIb,GAAGjC,EAASE,KAAKM,KAAKsB,OAASxC,EAAYc,SAW3C,OATAhB,EAAU2C,WAAY,EAAAzB,EAAAC,SAAmBP,EAASE,KAAKM,MAEvDE,IAEAlB,EAASiB,UAAUvB,SAASC,cAAc,yBAE1CwB,EAAAC,GAASC,OAAOqB,QAAQ,6DAA8D,CAClFnB,QAAS,MAKb3B,EAAU2C,WAAY,EAAAzB,EAAAC,SAAmBP,EAASE,KAAKM,MAEvDE,IAEAlB,EAAS2C,QAAQjD,SAASC,cAAc,oBAExCwB,EAAAC,GAASC,OAAOuB,QAAQ,oBAAoBpC,EAASE,KAAKC,8BAA+B,CACzFY,QAAS,K,CAGX,MAAMC,GACJC,QAAQC,IAAIF,E","sources":["src/js/galleryInfiniteScroll.js"],"sourcesContent":["import { UnsplashAPI } from './unsplash-api';\nimport createGalleryCards from '../templates/gallery-card.hbs';\nimport Notiflix from 'notiflix';\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nconst searchFormEl = document.querySelector('.js-search-form');\nconst galleryEl = document.querySelector('.js-gallery');\nconst userInput = document.querySelector('.js-search-input');\n\nconst unsplashAPI = new UnsplashAPI();\n\nconst LoadMoreData = async event => {\n    unsplashAPI.page += 1;\n\n    try {\n        const response = await unsplashAPI.fetchPhotosByQuery();\n\n        if (response.data.totalHits <= unsplashAPI.per_page*unsplashAPI.page) {\n\n            galleryEl.insertAdjacentHTML('beforeend', createGalleryCards(response.data.hits));\n\n            observer.unobserve(document.querySelector('.target-element'));\n\n            modalWindow();\n\n            Notiflix.Notify.info(\"We're sorry, but you've reached the end of search results.\", {\n            timeout: 3000,\n            }, );\n            return;\n        }\n        \n        galleryEl.insertAdjacentHTML('beforeend', createGalleryCards(response.data.hits));\n\n        modalWindow();\n\n        } catch(err) {\n        console.log(err);\n        };\n    };\n\nconst observer = new IntersectionObserver(\n    (entries, observer) => {\n        if (entries[0].isIntersecting) {\n        LoadMoreData();\n        }\n    },\n    {\n        root: null,\n        rootMargin: '600px',\n        threshold: 1,\n    }\n    );\n\nconst onSearchFormSubmit = async event => {\n    event.preventDefault();\n\n    unsplashAPI.query = userInput.value;\n    unsplashAPI.page = 1;\n\n    try { \n    const response = await unsplashAPI.fetchPhotosByQuery();\n\n      if (response.data.hits.length === 0) { //Якщо не коректний запрос повертаэться масив з length = 0, тоді очищаємо форму, ховаємо кнопку, очищуємо Input\n        \n        Notiflix.Notify.info(\"Sorry, there are no images matching your search query. Please try again.\");\n\n        galleryEl.innerHTML = ''; \n\n        observer.unobserve(document.querySelector('.target-element'));\n\n        event.target.reset();\n        return;\n        }\n\n        if(response.data.hits.length < unsplashAPI.per_page) {\n\n        galleryEl.innerHTML = createGalleryCards(response.data.hits);\n\n        modalWindow();\n\n        observer.unobserve(document.querySelector('.target-element'));\n\n        Notiflix.Notify.failure(\"We're sorry, but you've reached the end of search results.\", {\n            timeout: 3000,\n        });\n        return;\n        }\n\n        galleryEl.innerHTML = createGalleryCards(response.data.hits);\n\n        modalWindow();\n\n        observer.observe(document.querySelector('.target-element'));\n\n        Notiflix.Notify.success(`Hooray! We found ${response.data.totalHits} totalHits images.`, {\n        timeout: 3000,\n        },);\n\n    } catch(err) {\n        console.log(err);\n    };\n};\n\n\n\nconst modalWindow = function() {\n    const lightbox = new SimpleLightbox('.gallery a', {\n    captionsData: 'alt',\n    captionDelay: 300,\n    });\n    return lightbox;\n};\n\nsearchFormEl.addEventListener('submit', onSearchFormSubmit);\n"],"names":["$dxBSg","parcelRequire","$29e38b0a5cda0091$var$searchFormEl","document","querySelector","$29e38b0a5cda0091$var$galleryEl","$29e38b0a5cda0091$var$userInput","$29e38b0a5cda0091$var$unsplashAPI","UnsplashAPI","$29e38b0a5cda0091$var$observer","IntersectionObserver","entries","observer","isIntersecting","async","event","page","response","fetchPhotosByQuery","data","totalHits","per_page","insertAdjacentHTML","$cdIRi","default","hits","unobserve","$29e38b0a5cda0091$var$modalWindow","$parcel$interopDefault","$eWCmQ","Notify","info","timeout","err","console","log","$29e38b0a5cda0091$var$LoadMoreData","root","rootMargin","threshold","$fZKcF","captionsData","captionDelay","addEventListener","preventDefault","query","value","length","innerHTML","target","reset","failure","observe","success"],"version":3,"file":"scroll-page.9f48a749.js.map"}